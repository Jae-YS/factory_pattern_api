post:
  tags:
    - Mechanic
  summary: "Create a new mechanic"
  description: "Endpoint to create a new mechanic in the system."
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../definitions/Mechanic.yaml#/MechanicCreatePayload"
  responses:
    "201":
      description: "Mechanic created successfully"
      content:
        application/json:
          schema:
            $ref: "../definitions/Mechanic.yaml#/MechanicResponse"
    "409":
      description: "Conflict - Mechanic with this email already exists"
      content:
        application/json:
          schema:
            $ref: "../definitions/Error.yaml#/ErrorResponse"
    "400":
      description: "Invalid request payload"
      content:
        application/json:
          schema:
            $ref: "../definitions/Error.yaml#/ErrorResponse"
    "500":
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "../definitions/Error.yaml#/ErrorResponse"

get:
  tags:
    - Mechanic
  summary: "Get all Mechanics"
  description: "Endpoint to retrieve a list of all Mechanics."
  responses:
    "200":
      description: "List of Mechanics retrieved successfully"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "../definitions/Mechanic.yaml#/MechanicResponse"
    "500":
      description: "Internal server error"
      content:
        application/json:
          schema:
            $ref: "../definitions/Error.yaml#/ErrorResponse"

/login:
  post:
    tags:
      - Mechanic
    summary: "Mechanic Login (generates token)"
    description: "Validates mechanic credentials and returns a JWT token."
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../definitions/Auth.yaml#/LoginCredentials"
    responses:
      "200":
        description: "Login successful"
        content:
          application/json:
            schema:
              $ref: "../definitions/Auth.yaml#/LoginResponse"
      "400":
        description: "Invalid credentials"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "401":
        description: "Unauthorized - Mechanic not found or password mismatch"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "500":
        description: "Internal server error"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"

/{mechanic_id}:
  put:
    tags:
      - Mechanic
    summary: "Update Mechanic by ID"
    description: "Endpoint to update a mechanic's details by their ID."
    security:
      - bearerAuth: []
    parameters:
      - name: mechanic_id
        in: path
        required: true
        description: "ID of the mechanic to update"
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../definitions/Mechanic.yaml#/MechanicUpdatePayload"
    responses:
      "200":
        description: "Mechanic updated successfully"
        content:
          application/json:
            schema:
              $ref: "../definitions/Mechanic.yaml#/MechanicResponse"
      "403":
        description: "Forbidden - Mechanic does not have access to this resource"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "404":
        description: "Mechanic not found"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "500":
        description: "Internal server error"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"

  delete:
    tags:
      - Mechanic
    summary: "Delete Mechanic by ID"
    security:
      - bearerAuth: []
    description: "Endpoint to delete a mechanic by their ID."
    parameters:
      - name: mechanic_id
        in: path
        required: true
        description: "ID of the mechanic to delete"
        schema:
          type: integer
    responses:
      "204":
        description: "Mechanic deleted successfully"
      "400":
        description: "Invalid request - Mechanic ID must be a valid integer"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "403":
        description: "Forbidden - Mechanic does not have access to this resource"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "404":
        description: "Mechanic not found"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "500":
        description: "Internal server error"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
  get:
    tags:
      - Mechanic
    summary: "Get Mechanic by ID"
    security:
      - bearerAuth: []
    description: "Endpoint to retrieve a mechanic's details by their ID."
    parameters:
      - name: mechanic_id
        in: path
        required: true
        description: "ID of the mechanic to retrieve"
        schema:
          type: integer
    responses:
      "200":
        description: "Mechanic retrieved successfully"
        content:
          application/json:
            schema:
              $ref: "../definitions/Mechanic.yaml#/MechanicResponse"
      "403":
        description: "Forbidden - Mechanic does not have access to this resource"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "404":
        description: "Mechanic not found"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
      "500":
        description: "Internal server error"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"

/rankings:
  get:
    tags:
      - Mechanic
    summary: "Get Mechanic Rankings"
    description: "Endpoint to retrieve the rankings of mechanics based on their performance."
    responses:
      "200":
        description: "Mechanic rankings retrieved successfully"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../definitions/Mechanic.yaml#/MechanicResponse"
      "500":
        description: "Internal server error"
        content:
          application/json:
            schema:
              $ref: "../definitions/Error.yaml#/ErrorResponse"
